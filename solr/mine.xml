<?xml version="1.0" ?><add><doc><field name="url">http://apcentral.collegeboard.com/apc/public/courses/teachers_corner/151155.html</field><field name="name">Gridworld Case Study</field><field name="description">Gridworld case study used in the AP CS exam</field><field name="author"/><field name="topics">case study</field><field name="resource_type">case study</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/public/repository/ap_comp_sci_a_quick_reference.pdf</field><field name="name">Quick Reference</field><field name="description">Reference document allowed for us on the AP exam.</field><field name="author"/><field name="topics">all</field><field name="resource_type">reference</field><field name="comment">this is a test comment</field><field name="comment">this is a &lt;b&gt;strong&lt;/b&gt; comment</field><field name="comment">this is the third comment</field></doc><doc><field name="url">http://armorgames.com/play/6061/light-bot-20</field><field name="name">LightBot</field><field name="description">Lightbot is a game where you use tiles to create algorithms to direct your robot through a maze.</field><field name="author">Danny Yaroslavski</field><field name="topics">functions, conditionals, recursion</field><field name="resource_type">activity</field><field name="resource_type">game</field></doc><doc><field name="url">http://codingbat.com/java/AP-1</field><field name="name">Coding Bat AP-1</field><field name="description">Small programming problems based on past AP exams.</field><field name="author">Nick Parlante</field><field name="topics">arrays, loops, logic</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/Array-1</field><field name="name">Coding Bat: Arrays</field><field name="description">Small interactive activities to give students practice writing Java programs with simple arrays and no loops. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution has been reached. Sample solutions are given. System tracks progress for a single user. Explanations of the concepts are available.</field><field name="author"/><field name="topics">arrays</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/Array-2</field><field name="name">Coding Bat: Medium Arrays</field><field name="description">Small interactive activities to give students practice writing Java programs with arrays and one loop. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution</field><field name="author"/><field name="topics">arrays, loops</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/Array-3</field><field name="name">Coding Bat: Hard Arrays</field><field name="description">Small interactive activities to give students practice writing Java programs with arrays and loops. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution</field><field name="author"/><field name="topics">arrays, loops, logic</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/Logic-1</field><field name="name">Coding Bat: Logic</field><field name="description">Small interactive activities to give students practice writing Java programs with boolean logic: if, else, and, or, not. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution has been reached. Sample solutions are given. System tracks progress for a single user. Explanations of the concepts are available.</field><field name="author"/><field name="topics">boolean logic, conditionals</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/Logic-2</field><field name="name">Coding Bat: Medium Logic</field><field name="description">Small interactive activities to give students practice writing Java programs with boolean logic of medium complexity: if, else, and, or, not. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution has been reached. Sample solutions are given. System tracks progress for a single user. Explanations of the concepts are available.</field><field name="author"/><field name="topics">boolean logic, conditionals</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/Recursion-1</field><field name="name">Coding Bat: Recursion</field><field name="description">Small interactive activities to give students practice writing Java programs with recursion and simple logic. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution</field><field name="author"/><field name="topics">recursion, logic</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/Recursion-2</field><field name="name">Coding Bat: Advanced Recursion</field><field name="description">Small interactive activities to give students practice writing Java programs with recursive backtracking problems and arrays. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution</field><field name="author"/><field name="topics">recursion, logic, backtracking, arrays</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/String-1</field><field name="name">Coding Bat: Strings</field><field name="description">Small interactive activities to give students practice writing Java programs with simple strings. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution has been reached. Sample solutions are given. System tracks progress for a single user. Explanations of the concepts are available.</field><field name="author"/><field name="topics">strings</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/String-2</field><field name="name">Coding Bat: Medium Strings</field><field name="description">Small interactive activities to give students practice writing Java programs with simple strings and a loop. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution has been re</field><field name="author"/><field name="topics">strings, loops</field><field name="resource_type">activity</field></doc><doc><field name="url">http://codingbat.com/java/String-3</field><field name="name">Coding Bat: Hard Strings</field><field name="description">Small interactive activities to give students practice writing Java programs with strings and loops. Online code practice in which students are given a problem and space to type code, then CodeBat tests the code to determine if a correct solution</field><field name="author"/><field name="topics">strings, loops</field><field name="resource_type">activity</field></doc><doc><field name="url">http://cs.colgate.edu/APCS/Java/CRCCards/CRCcards.ZIP</field><field name="name">CRC Cards</field><field name="description">CRC (Class, Responsibility, Collaboration) cards are a device for developing the design of an object-oriented program.</field><field name="author"/><field name="topics">OOD, Object Oriented Design</field><field name="resource_type">activity</field><field name="resource_type">role play</field></doc><doc><field name="url">http://cs.colgate.edu/APCS/Java/RolePlays/broccoliRolePlay.ZIP</field><field name="name">Broccoli Role Play</field><field name="description">Role play that builds a tree</field><field name="author"/><field name="topics">recursion, tree</field><field name="resource_type">activity</field><field name="resource_type">role play</field></doc><doc><field name="url">http://cs.colgate.edu/APCS/Java/RolePlays/elevator3RolePlay.ZIP</field><field name="name">Elevator System Role Play</field><field name="description">This role play uses the objectdraw library from William's College. However, it could easily be adapted to another context that has graphical objects, such as BlueJ. This is a role-play that can be used early in a course.</field><field name="author"/><field name="topics">objects, methods</field><field name="resource_type">activity</field><field name="resource_type">role play</field></doc><doc><field name="url">http://cs.colgate.edu/APCS/Java/RolePlays/swapRolePlays.ZIP</field><field name="name">Swap Role Play for Parameters</field><field name="description">This role-play is designed to help the participants and observers understand how object parameters are references that are passed by value. There are two versions, one that uses the objectdraw library from William's College, the other uses BlueJ.</field><field name="author"/><field name="topics">objects, methods, swap,</field><field name="resource_type">role play</field></doc><doc><field name="url">http://cse4k12.org/binary/magic_trick.html</field><field name="name">Binary Magic Trick</field><field name="description">The binary magic trick is a set of 6 cards with numbers on them. You show the cards to someone and have them secretly choose a number and then select all of the cards that contain that number. Using your magic powers, you can easily figure out which number they have chosen.</field><field name="author"/><field name="topics">binary</field><field name="resource_type">activity</field></doc><doc><field name="url">http://cse4k12.org/crossbin/index.html</field><field name="name">Crossbin Puzzles</field><field name="description">Crossbin puzzles are similar to crossword puzzles except that the clues are hexadecimal numbers and the answers are binary; when you fill in the puzzle sheet, you get a small picture.</field><field name="author"/><field name="topics"/><field name="resource_type">activity</field></doc><doc><field name="url">http://cse4k12.org/logic/logic_nethack.html</field><field name="name">Boolean Logic from Nethack</field><field name="description">This activity takes some boolean logic from the game Nethack and summarizes it as boolean expressions for the students to evaluate</field><field name="author"/><field name="topics">boolean logic</field><field name="resource_type">activity</field></doc><doc><field name="url">http://csi.dcs.gla.ac.uk/workshop-view.php?workshopID=12</field><field name="name">Algorithm development</field><field name="description">Students will experience writing and following algorithms</field><field name="author"/><field name="topics">algorithms</field><field name="resource_type">activity</field></doc><doc><field name="url">http://csi.dcs.gla.ac.uk/workshop-view.php?workshopID=2</field><field name="name">Doing a million things at once</field><field name="description">This workshop exposes the way phones and computers appear to be working on many tasks at once - consider typing into Messenger, a CD playing, receiving e-mail and a streaming video all happening simultaneously on your PC. Pupils role play being different tasks and the components of a computer in order to analyse different mechanisms used by computers to schedule multiple tasks, and the effects this have on the users of the technology.</field><field name="author"/><field name="topics">scheduling</field><field name="resource_type">activity</field><field name="resource_type">role play</field></doc><doc><field name="url">http://csis.pace.edu/~bergin/Java/OOStory.html</field><field name="name">Object Oriented Bedtime Story</field><field name="description">A framework for thinking about objects, in the form of a story.</field><field name="author"/><field name="topics">OOD, Object Oriented Design, objects</field><field name="resource_type">explanation</field></doc><doc><field name="url">http://csis.pace.edu/~bergin/Java/RolePlay.html</field><field name="name">Objects on the First Day</field><field name="description">Explanations and materials for role play activities where students act out different objects, suitable for using on the first day of class, before students have had any Java.</field><field name="author"/><field name="topics">Objects, methods, attributes, polymorphism</field><field name="resource_type">offline</field><field name="resource_type">role play</field></doc><doc><field name="url">http://csis.pace.edu/~bergin/patterns/objectgame.html</field><field name="name">Object Game</field><field name="description">Role play of a game to help students understand how objects work and interact</field><field name="author"/><field name="topics">Objects, methods, state, instantiation</field><field name="resource_type">offline</field><field name="resource_type">role play</field></doc><doc><field name="url">http://cslibrary.stanford.edu/102/PointersAndMemory.pdf</field><field name="name">Pointers and Memory</field><field name="description">Stanford CS Education Library: a 31 page introduction to programming with pointers and memory in C, C++ and other languages. Explains how pointers and memory work and how to use them -- from the basic concepts through all the major programming techniques. Can be used as an introduction to pointers for someone with basic programming experience or as a quick review. Many advanced programming and debugging problems only make sense with a solid understanding of pointers and memory -- this document tries to provide that understanding. Topics include: pointers, local memory, allocation, deallocation, dereference operations, pointer assignment, deep vs. shallow copies, the ampersand operator (&amp;), bad pointers, the NULL pointer, value parameters, reference parameters, pointer to pointers, dynamic heap memory, memory ownership models, and memory leaks. The article focuses on pointers and memory in compiled languages like C and C++ with occasional notes about Java.</field><field name="author"/><field name="topics">pointers, memory</field><field name="resource_type">explanation</field></doc><doc><field name="url">http://cslibrary.stanford.edu/109/TreeListRecursion.pdf</field><field name="name">Great Tree List Recursion Problem</field><field name="description">Stanford CS Education Library: one of the neatest recursive pointer problems ever devised. This is an advanced recursive pointer problem that uses a binary tree and a doubly linked list. You should be comfortable with pointers and recursion to understand this problem. This article introduces the problem with a few memory diagrams, gives some hints, and provides solution code in both Java and C/C++. Available in both HTML and PDF...</field><field name="author"/><field name="topics">binary trees, recursion, pointers, doubly-linked lists</field><field name="resource_type">explanation</field><field name="resource_type">problems</field></doc><doc><field name="url">http://cslibrary.stanford.edu/110/BinaryTrees.pdf</field><field name="name">Binary Trees</field><field name="description">Stanford CS Education Library: introduces the basic concepts of binary trees, and works through a series of practice problems with solution code in C/C++ and Java. Binary trees have an elegant recursive pointer structure, so they are a good way to learn recursive pointer algorithms.</field><field name="author"/><field name="topics">binary trees</field><field name="resource_type">explanation</field><field name="resource_type">problems</field></doc><doc><field name="url">http://csunplugged.org/divideAndConquer</field><field name="name">Divide and Conquer</field><field name="description">Video and activity demonstrating algorithmic efficiency in search by asking students to devise a solution to finding a present in a bunch of wrapped boxes where Santa has accidentally wrapped his dirty socks.</field><field name="author"/><field name="topics">problem solving</field><field name="resource_type">activity</field></doc><doc><field name="url">http://download.oracle.com/javase/1.5.0/docs/api/</field><field name="name">Java API</field><field name="description">Java API from Sun</field><field name="author"/><field name="topics">api, java resource, help</field><field name="resource_type">resource</field></doc><doc><field name="url">http://en.wikipedia.org/wiki/File:Pointer_Fun_with_Binky_%28Java%29.ogg</field><field name="name">Binky Pointer Video</field><field name="description">A silly but memorable 3 minute animated video demonstrating the basic structure, techniques, and pitfalls of using pointers.</field><field name="author"/><field name="topics">pointers</field><field name="resource_type">video</field></doc><doc><field name="url">http://galileoweb.org/chunb/files/2011/02/HW4-Sorting-Worksheet.pdf</field><field name="name">Sorting Activity</field><field name="description">Relatively short paper-based activity asking students to identify which sorting algorithm is which, and to predict the step-by-step outcome of some algorithms</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">activity</field></doc><doc><field name="url">http://home.cc.gatech.edu/dorn/41</field><field name="name">Jeroo</field><field name="description">Jeroo is a free tool that has been designed for novice programmers to help them understand object-oriented programming using an engaging metaphor. Santong island is an uninhabited speck of land in the South Pacific Ocean. In the late 1980's, naturalist Jessica Tong discovered two previously unknown species that are unique to this island. One is the Jeroo, a rare mammal similar to the wallabies of Australia. The other is the large Winsum flower that serves as the Jeroo's primary food source. The Jeroos hop about the island picking and planting flowers. As they move, they must avoid the water, and evade or disable nets that have been set by a zoo's species collector. Students configure the island and develop programs to control the actions of up to four Jeroos and their interactions with their immediate surroundings.</field><field name="author"/><field name="topics"/><field name="resource_type">tool</field></doc><doc><field name="url">http://introcs.cs.princeton.edu/data/chromosome4.txt</field><field name="name">Chromosome 4 data</field><field name="description">Data set representing chromosome 4 of the human genome. Useful for activities about large data sets and real-life examples of computational biology.</field><field name="author"/><field name="topics">data</field><field name="resource_type">data</field></doc><doc><field name="url">http://introcs.cs.princeton.edu/data/pi-10million.txt</field><field name="name">First 10 million digits of pi</field><field name="description">Data set in text form containing the first ten million digits of pi. Useful for activities about searching and large data.</field><field name="author"/><field name="topics">data</field><field name="resource_type">data</field></doc><doc><field name="url">http://ljhs.sandi.net/faculty/volger/apajava/GridWorld/Assignments/AntFarm/</field><field name="name">Ant Farm</field><field name="description">Ant Farm is a GridWorld activity.</field><field name="author"/><field name="topics">objects, interfaces, abstract classes, inheritence, encapsulation, polymorphism</field><field name="resource_type">activity</field><field name="resource_type">case study</field></doc><doc><field name="url">http://math.hws.edu/TMCM/java/xSortLab/</field><field name="name">xSortLab</field><field name="description">Applet that allows students to investigate different sorting algorithms including visualizations and timing. Does a nice job of breaking the algorithms down step by step.</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">activity</field></doc><doc><field name="url">http://mathmaniacs.org/lessons/08-sorting/index.html</field><field name="name">Sorting</field><field name="description">Activity for students to gain hands-on experience with sorting. Good introduction before the CS Unplugged balance scale activity.</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">activity</field></doc><doc><field name="url">http://mathmaniacs.org/lessons/11-graphsearch/index.html</field><field name="name">Graph Search</field><field name="description">Activity for students to gain hands-on experience understanding search through use of a game (which you will have to make; instructions are included).</field><field name="author"/><field name="topics">search</field><field name="resource_type">activity</field></doc><doc><field name="url">http://nifty.stanford.edu/2011/craig-book-recommendations/</field><field name="name">Book Recommendation System</field><field name="description">In this assignment, students write a program that makes personalized book recommendations using algorithms with increasing levels of sophistication. After reading a pre-collected set of ratings for a list of books, the program makes recommendations for a particular reader based on a small set of sample ratings from that reader and the preferences of other readers in the community. The assignment was inspired by machine learning research used to predict book preferences for Chapters.Indigo.ca. It provides the opportunity to discuss similarity measures for non-trivial objects and alludes to machine learning techniques.</field><field name="author"/><field name="topics">arrays, file I/O</field><field name="resource_type">project</field></doc><doc><field name="url">http://nifty.stanford.edu/2011/feinberg-generic-scrolling-game/</field><field name="name">Generic Scrolling Game</field><field name="description">Students create a personalized scrolling arcade-style game.</field><field name="author"/><field name="topics">objects, GridWorld</field><field name="resource_type">project</field></doc><doc><field name="url">http://nifty.stanford.edu/2011/malan-bmp-puzzles/</field><field name="name">BMP Puzzles</field><field name="description">Students computationally implement the red sheet of plastic that used to come in cereal boxes to decode the secret message on the back of the box. Engaging introduction to steganography. As written, is in C, but could be modified for other languages.</field><field name="author"/><field name="topics">loops, conditionals, I/O</field><field name="resource_type">activity</field></doc><doc><field name="url">http://nifty.stanford.edu/2011/parlante-image-puzzle/</field><field name="name">Nifty Images</field><field name="description">This assignment asks students to modify images that have been digitally broken, to make them correct. As implemented is an online activity, could easily be modified slightly to work as a standalone activity in a standard IDE.</field><field name="author"/><field name="topics">algorithms</field><field name="resource_type">activity</field></doc><doc><field name="url">http://nifty.stanford.edu/2011/scott-wator-world/</field><field name="name">Wa-Tor World</field><field name="description">Wa-Tor World a biological simulation of two species with various parameters such as time between breeding and time before starving. The assignment focuses on creating a GUI to display the simulation. The simulation itself is built on the College Board's APCS GridWorld case study.</field><field name="author"/><field name="topics">objects, GUI, Gridworld</field><field name="resource_type">project</field></doc><doc><field name="url">http://opsis.sourceforge.net/</field><field name="name">Opsis</field><field name="description">Opsis is a Java applet designed to teach binary search tree algorithms. Opsis is not an animation program; rather, the system uses visual programming in an abstract way. That is, the student implements a binary search tree algorithm by manipulating abstract tree fragments (and not necessarily just single nodes) in a visual manner. Opsis is unique in that it combines elements of programming, proof, and animation to enhance the learning experience.</field><field name="author"/><field name="topics">Binary Search Tree</field><field name="resource_type">activity</field></doc><doc><field name="url">http://pleasingfungus.com/</field><field name="name">Manufactoria</field><field name="description">Manufactoria is a game where you are recruited to create a machine that tests robots to make sure they meet certain requirements. Has a number of levels of increasing complexity. Good introduction to Turing machines and simple algorithms.</field><field name="author"/><field name="topics">algorithms</field><field name="resource_type">game</field><field name="resource_type">activity</field></doc><doc><field name="url">http://showsort.darkhelm.org/</field><field name="name">ShowSort</field><field name="description">Graphical visualization of sorting a set of integers. Many algorithms, each with a description and source code.</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">activity</field></doc><doc><field name="url">http://singpath.appspot.com/eli/index.html</field><field name="name">SingPath</field><field name="description">Similar to CodingBat, online self-tests for small programming activities. Designed to be fun, has parths to follow. Must sign in to use.</field><field name="author"/><field name="topics">all</field><field name="resource_type">activity</field></doc><doc><field name="url">http://theory.stanford.edu/~aiken/moss/</field><field name="name">MOSS</field><field name="description">MOSS is the Measure of Software Similarity, an internet-based tool you can use to detect plagiarism amongst your students' programs.</field><field name="author"/><field name="topics"/><field name="resource_type">tool</field></doc><doc><field name="url">http://wffnproof.com/inc/sdetail/102</field><field name="name">WFF n Proof</field><field name="description">This is a game that helps students develop propositional logic. It has instructions, a game board, and specialty dice. The full game costs $35 and there is a smaller introductory game that is less expensive.</field><field name="author"/><field name="topics">propositional logic</field><field name="resource_type">game</field></doc><doc><field name="url">http://www.apluscompsci.com/APCSAAuditSyllabi.pdf</field><field name="name">APCS A Syllabus (Audit Approved)</field><field name="description">Syllabus for AP CS.</field><field name="author"/><field name="topics">all</field><field name="resource_type">syllabus</field></doc><doc><field name="url">http://www.apluscompsci.com/Jeroo%20Lab%202A.pdf</field><field name="name">Jeroo Lab</field><field name="description">Lab using Jeroo</field><field name="author"/><field name="topics"/><field name="resource_type">activity</field></doc><doc><field name="url">http://www.bitsbook.com/</field><field name="name">Blown to Bits</field><field name="description">Free downloadable PDF of book about the impact of engineering and computing on society. Good post-AP activity or reading across the curriculum.</field><field name="author"/><field name="topics">ethics</field><field name="resource_type">book</field></doc><doc><field name="url">http://www.bluej.org/help/ap.html</field><field name="name">BlueJ for AP Computer Science</field><field name="description">Instructions and links for setting up the BlueJ environment for use in APCS with GridWorld</field><field name="author"/><field name="topics">case study</field><field name="resource_type">compiler</field><field name="resource_type">case study</field></doc><doc><field name="url">http://www.bluepelicanjava.com/gridWorld/downloads/gridWorld_demo.zip</field><field name="name">Gridworld Videos</field><field name="description">A set of videos introducing the classes in the GridWorld case study. Free, designed to accompany Blue Pelican Java textbook.</field><field name="author"/><field name="topics"/></doc><doc><field name="url">http://www.bluepelicanjava.com/userLogin_dwnLd.asp</field><field name="name">Blue Pelican Java</field><field name="description">Free textbook intended for APCS.</field><field name="author"/><field name="topics">all</field><field name="resource_type">textbook</field></doc><doc><field name="url">http://www.brian-borowski.com/Software/Sorting/</field><field name="name">Sorting Demo</field><field name="description">Java applet demonstration of sorting algorithms</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">video</field></doc><doc><field name="url">http://www.collegeboard.com/student/testing/ap/compsci_a/topic.html?compscia</field><field name="name">AP CS A Topic Outline</field><field name="description"/><field name="author"/><field name="topics"/><field name="resource_type">list</field></doc><doc><field name="url">http://www.cs.cmu.edu/afs/cs.cmu.edu/academic/class/15251/discretemath/Lectures/pancakes.ppt</field><field name="name">Pancakes with a problem</field><field name="description">Powerpoint presenting a problem about a cafÃ© where pancakes come out of the kitchen in different sizes and need to be sorted by size for serving.</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">presentation</field></doc><doc><field name="url">http://www.cs.sbu.edu/dlevine/RolePlay/ChipsRolePlay.doc</field><field name="name">Chips Role Play</field><field name="description">THIS FILE ALSO NEEDEDL http://www.cs.sbu.edu/dlevine/RolePlay/ChipsRolePlayOverview.doc We have written a version of Chips in which players of various strategies (e.g. random, 'always take 1', 'ask the user') can compete.  The various strategic player classes inherit from an abstract player class.  (This code is available in both C++ and Java versions.)  We have also written role play scripts and an overview document for Chips.  Note that the inheritance in this role play is modeled through delegation.</field><field name="author">David Levine</field><field name="topics">OOP</field><field name="resource_type">activity</field><field name="resource_type">role play</field></doc><doc><field name="url">http://www.cs.sbu.edu/dlevine/RolePlay/FirstDay.doc and http://www.cs.sbu.edu/dlevine/RolePlay/FirstDayOverview.doc</field><field name="name">First Day Role Play</field><field name="description">Students play the role of different actors. The teacher calls student-objects and gives them commands. Open-ended and lends itself to many implementations. Can be used to introduce object-oriented paradigms as early as the first day of class.</field><field name="author"/><field name="topics">OOP, methods, attributes, polymorphism</field><field name="resource_type">activity</field><field name="resource_type">role play</field></doc><doc><field name="url">http://www.cs.sbu.edu/dlevine/RolePlay/GridWorldRolePlayScripts.pdf and http://www.cs.sbu.edu/dlevine/RolePlay/GridWorldRolePlayOverview.pdf</field><field name="name">APCS GridWorld Role Plays</field><field name="description">Students play the role of different actors. Uses the Gridworld from APCS. There are two role plays. The first is designed to emphasize how the various classes interact. It uses only concepts through Chapter 2 of the case study. The second is designed to highlight the organization of the Critter class and uses concepts through Chapter 4.</field><field name="author"/><field name="topics">OOP, gridworld</field><field name="resource_type">activity</field><field name="resource_type">role play</field></doc><doc><field name="url">http://www.devtopics.com/20-famous-software-disasters/</field><field name="name">20 Famous Software Disasters</field><field name="description"/><field name="author"/><field name="topics"/><field name="resource_type">resource</field></doc><doc><field name="url">http://www.greenfoot.org/ap/gridWorld-greenfoot.zip</field><field name="name">Gridworld Scenarios for Greenfoot</field><field name="description">Gridworld scenarios for using in the Greenfoot environment. Useful for having students explore Gridworld and try programming small challenges. More information at http://www.greenfoot.org/ap/</field><field name="author"/><field name="topics">case study</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.greenfoot.org/download/</field><field name="name">Greenfoot</field><field name="description">Popular compiler for java that makes graphics easy.</field><field name="author"/><field name="topics">Java</field><field name="resource_type">compiler</field></doc><doc><field name="url">http://www.greenteapress.com/thinkapjava/thinkapjava.pdf</field><field name="name">How to Think Like a Computer Scientist</field><field name="description">Free textbook available for download, modification, and printing.</field><field name="author"/><field name="topics">all</field><field name="resource_type">textbook</field></doc><doc><field name="url">http://www.gwhs.warren.k12.ky.us/pages/klee/approg/AP%20Computer%20Science%20A%20-%20Course%20Syllabus.pdf</field><field name="name">Syllabus</field><field name="description">Syllabus for AP CS.</field><field name="author"/><field name="topics">all</field><field name="resource_type">syllabus</field></doc><doc><field name="url">http://www.jamtester.com/about.php</field><field name="name">JAM Tester</field><field name="description">Grading and code testing tool for use by teachers and by students. Unclear if it is still being updated.</field><field name="author"/><field name="topics"/><field name="resource_type">tool</field></doc><doc><field name="url">http://www.leepoint.net/JavaBasics/methods/methods-20-define.html</field><field name="name">Defining methods</field><field name="description">Explains how to write static methods.</field><field name="author"/><field name="topics">methods</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.leepoint.net/JavaBasics/methods/methods-22-local-variables.html</field><field name="name">Local variables</field><field name="description">Explains how local variables work and how to use them</field><field name="author"/><field name="topics">variables</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.leepoint.net/JavaBasics/oop/oop-30-constructor-student.html</field><field name="name">Constructors</field><field name="description">Introduces the idea of constructors along with how to create them and why to use them.</field><field name="author"/><field name="topics">constructors</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.leepoint.net/notes-java/algorithms/searching/searchsortoverview.html</field><field name="name">Search/Sort Overview</field><field name="description">Overview explanation of searching and sorting, including comparison operators and comparable interface.</field><field name="author"/><field name="topics">search, sort</field><field name="resource_type">explanation</field></doc><doc><field name="url">http://www.leepoint.net/notes-java/data/collections/iterators.html</field><field name="name">Iterators</field><field name="description">Overview of using iterators in lists and sets.</field><field name="author"/><field name="topics">iterators</field><field name="resource_type">explanation</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/errors/errors.htm</field><field name="name">Recognizing Syntax Errors</field><field name="description">Activity for students to gain experience with syntax errors and begin to practice debugging</field><field name="author"/><field name="topics">errors</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l1/Lesson%201%20-%20OOP.ppt</field><field name="name">Classes, Attributes, Methods</field><field name="description"/><field name="author"/><field name="topics">OOP, Objects, methods, attributes</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l1/Worksheet%20A1.1%20-%20OOP.doc</field><field name="name">OOP Basics</field><field name="description">Introductory worksheet for thinking about drawing methods and OOP</field><field name="author"/><field name="topics">methods</field><field name="resource_type">worksheet</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l2/Lesson%202%20-Object%20Oriented%20Programming.ppt</field><field name="name">Object Oriented Programming</field><field name="description">Powerpoint explaining object oriented programming</field><field name="author"/><field name="topics">OOP</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l3/3-2%20prelab%20questions.txt</field><field name="name">Algorithmic efficiency</field><field name="description">Very short (pre-lab) activity that has students think about the most efficient way to make change.</field><field name="author"/><field name="topics">efficiency, algorithms, design</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l3/Lesson%203%20-%20Primitive%20Data%20Types.ppt</field><field name="name">Primitive Data Types</field><field name="description">Powerpoint explaining primitive data types</field><field name="author"/><field name="topics">data types</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l4/concalc/concalc.htm</field><field name="name">Conversion Calculator</field><field name="description">Activity where students write methods to convert between different values</field><field name="author"/><field name="topics">methods, classes</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l4/Lesson%204%20-%20Object%20Behavior.ppt</field><field name="name">Methods</field><field name="description">Lesson about methods, method signatures, overloading, etc.</field><field name="author"/><field name="topics">methods</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l4/Practice%20Quiz%204.doc</field><field name="name">Quiz: Code trace</field><field name="description">Quiz or activity where students trace code and describe what it does and how it can be modified.</field><field name="author"/><field name="topics">methods, code trace</field><field name="resource_type">quiz</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l4/warmup0.htm</field><field name="name">Methods Warmup</field><field name="description">Very short warm-up activity where students fill in the blanks to create a method definition.</field><field name="author"/><field name="topics">methods, fill-in-the-blank</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l5/Classes%20Design%20Organizer%20-%20make%20bnk%20completed.htm</field><field name="name">Class Design Organizer</field><field name="description">Completed organizer that students would use to think about and practice designing classes, methods, and data.</field><field name="author"/><field name="topics">classes, OOD</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l6/Lesson%206%20-%20Libraries%20and%20APIs.ppt</field><field name="name">Libraries and APIs</field><field name="description">Lesson about libraries, APIs and the value of not writing all your own code</field><field name="author"/><field name="topics">libraries, api</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l6/Worksheet%20A6.2%20-%20Static%20Review.doc</field><field name="name">Static objects</field><field name="description">Activity to reinforce static objects; students have to create objects and methods to solve various math problems</field><field name="author"/><field name="topics">static, objects, methods, algorithms</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/l7/Lesson%207%20-%20Simple%20IO.ppt</field><field name="name">Input/Output in Java</field><field name="description">Powerpoint explaining input and output in java including system.out.println, scanner class, printf.</field><field name="author"/><field name="topics">I/O</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/madlibs/madlibs.htm</field><field name="name">Madlibs</field><field name="description">Students are asked to build a java program that takes user input and creates a madlib</field><field name="author"/><field name="topics">OOP, methods</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.mrlanda.com/apcs/practests/review%20L1-6.htm</field><field name="name">Practice Test</field><field name="description">Quiz primarily about variable assignment and naming conventions.</field><field name="author"/><field name="topics">variables</field><field name="resource_type">quiz</field></doc><doc><field name="url">http://www.siprep.org/faculty/bphilhour/documents/PracticeGridworldQuiz.pdf</field><field name="name">Practice Quiz on Gridworld</field><field name="description"/><field name="author"/><field name="topics">Gridworld, inheritence, classes, arrays</field><field name="resource_type">quiz</field></doc><doc><field name="url">http://www.siprep.org/science/physics/SIPrep--APComputerScienceCurriculumDevelopmentSummer2007.cfm</field><field name="name">Syllabus</field><field name="description">Syllabus for AP CS prepared using backward design principles.</field><field name="author"/><field name="topics">all</field><field name="resource_type">syllabus</field></doc><doc><field name="url">http://www.skylit.com/javamethods/syllabi/index.html</field><field name="name">Skylit Publishing Java Syllabus with Gridworld</field><field name="description"/><field name="author"/><field name="topics">all</field><field name="resource_type">syllabus</field></doc><doc><field name="url">http://www.sorting-algorithms.com/</field><field name="name">Sorting Algorithm Animations</field><field name="description">Interactive animations of many sorting algorithms. Students can change problem size, initial state, and algorithm, and watch the sort happen. Shows many algorithms simultaneously for comparison purposes</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">visualization</field></doc><doc><field name="url">http://www.youtube.com/user/AlgoRythmics</field><field name="name">Folk Dance Sorting Videos</field><field name="description">Videos of a Hungarian dance troupe doing folk dances that demonstrate various sorting algorithms</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">video</field></doc><doc><field name="url">http://www.youtube.com/user/AlgoRythmics#p/a/u/0/CmPA7zE8mx0</field><field name="name">Shell Sort Dance</field><field name="description">Video of folk dance demonstrating shell sort</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">video</field></doc><doc><field name="url">http://www.youtube.com/user/AlgoRythmics#p/a/u/1/Ns4TPTC8whw</field><field name="name">Select sort with Gypsy folk dance</field><field name="description">Video of a gypsy folk dance demonstrating select sort</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">video</field></doc><doc><field name="url">http://www.youtube.com/user/AlgoRythmics#p/a/u/2/lyZQPjUT5B4</field><field name="name">Bubble sort with Hungarian folk dance</field><field name="description">Video of a Hungarian folk dance demonstrating bubble sort</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">video</field></doc><doc><field name="url">http://www.youtube.com/watch?v=ROalU379l3U</field><field name="name">Insertion sort</field><field name="description">Video of a Romanian folk dance demonstrating Insertion sort</field><field name="author"/><field name="topics">sorting</field><field name="resource_type">video</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Assignment:%20FractalTurtle</field><field name="name">FractalTurtle</field><field name="description">Instead of teaching recursion using the typical functional examples like gcf() and fibonacci(), it is much more natural to present it as a way to draw fractals, shapes in which the whole shape is made up of several smaller copies of itself. Students are amazed by how a simple program can generate a complex result</field><field name="author"/><field name="topics">recursion</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Data%20Structures%20Test</field><field name="name">Data Structures Test</field><field name="description">Test about data structures</field><field name="author"/><field name="topics">data structures</field><field name="resource_type">quiz</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Lesson: Simple Recursion</field><field name="name">Simple Recursion</field><field name="description">Lesson explaining simple recursion in Java</field><field name="author"/><field name="topics">recursion</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Lesson:%20Blocks%20and%20scope</field><field name="name">Blocks and scope</field><field name="description">Lesson teaching how to break code into blocks and how to scope variables and methods.</field><field name="author"/><field name="topics">scope</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Lesson:%20Computers%20speak%20math</field><field name="name">Computers Speak Math</field><field name="description">Lesson introducing Java and variables</field><field name="author"/><field name="topics">expressions, variables</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Lesson:%20Defining%20methods</field><field name="name">Defining methods</field><field name="description">Lesson explaining how to create methods and pass parameters</field><field name="author"/><field name="topics">methods</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Lesson:%20If%20Statements</field><field name="name">If Statements</field><field name="description">Lesson explaining if statements, logic and syntax, in Java.</field><field name="author"/><field name="topics">conditionals</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Lesson:%20Memory,%20addresses,%20and%20objects</field><field name="name">Memory, addresses, and objects</field><field name="description">Lesson introduces the idea of classes along with memory addressing</field><field name="author"/><field name="topics">classes, objects</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Lesson:%20Operations%20Review</field><field name="name">Operations Review</field><field name="description">Lesson giving an overview of how operations work in Java</field><field name="author"/><field name="topics">objects, operations, variables, references</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Lesson:%20Reading%20method%20signatures</field><field name="name">Reading Method Signatures</field><field name="description">Lesson to help students understand method and constructor signatures. Students learn to read and write signatures.</field><field name="author"/><field name="topics">objects, methods, constructors</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Lesson:%20References%20and%20Variables</field><field name="name">References and Variables</field><field name="description">Lesson introduces using variables and references to refer to data. Also introduces passing parameters to methods.</field><field name="author"/><field name="topics">objects, variables, references</field><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Project:%20Asteroids</field><field name="name">Asteroids</field><field name="description">One of the hardest ideas to understand in introductory computer science is the idea of inheritance, and in particular, the idea that a subclass can not only add new abilities that never existed in the superclass, but also completely alter the behaviors inherited from the superclass. In the Asteroids game engine, the GameObject class has the capability to draw an animated image, move around on the screen, and vanish when it collides with another objects; this class can be subclassed and these behaviors overriden to produce all the objects needed for a complicated game</field><field name="author"/><field name="topics">Inheritance</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/index.php?title=Project:%20MeshTurtle</field><field name="name">Project MeshTurtle</field><field name="description">As a capstone project for the unit on basic Java syntax, this project contains a wide variety of sub-assignemnts that require the use of loops and recursion and a good understanding of method and class design</field><field name="author"/><field name="topics">Loops, Recursion, Methods, Class Design</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/MrZ/Defining%20Methods.pdf</field><field name="name">Methods</field><field name="description">Activity that asks students to display their understanding of methods.</field><field name="author"/><field name="topics">methods</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/MrZ/Expressions%20and%20Variables.pdf</field><field name="name">Expressions and Variables</field><field name="description">Small paper-based assignment that shows students understanding of variables and expressions.</field><field name="author"/><field name="topics">expressions, variables</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/MrZ/Loops%20and%20Recursion.pdf</field><field name="name">Loops and Recursion</field><field name="description">Assignment that ensures students understand how to use loops and recursion in Java, along with understanding which is more effective in certain situations.</field><field name="author"/><field name="topics">loops, recursion, conditionals</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/MrZ/Method%20Signatures.pdf</field><field name="name">Method Signatures</field><field name="description">Assignment to reinforce method signatures</field><field name="author"/><field name="topics">methods</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/MrZ/Objects,%20References,%20and%20Variables.pdf</field><field name="name">Objects, References, and Variables</field><field name="description">Assignment to assess student understanding of variables and references to data in objects.</field><field name="author"/><field name="topics">objects, variables, references</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/MrZ/Objects%20and%20Addresses.pdf</field><field name="name">Objects and Addresses</field><field name="description">Assignment to assess student understanding of memory addressing and objects</field><field name="author"/><field name="topics">objects, addresses</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/MrZ/Operations%20Exercise.pdf</field><field name="name">Operations Exercise</field><field name="description">Exercise that asks students to construct a class that draws a right triangle using the Turtle class, given a hypotenuse and angle.</field><field name="author"/><field name="topics">class, operations</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.zahniser.net/~russell/computer06/MrZ/Operations%20Review.pdf</field><field name="name">Operations Review Worksheet</field><field name="description">Worksheet giving students review on writing basic operations such as averaging numbers.</field><field name="author"/><field name="topics">methods, operations</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www2.niles-hs.k12.il.us/davrut/apcsa/projects/SnakeGameProj2010.pdf</field><field name="name">Snake Game</field><field name="description">Snake Game activity for students to program using GridWorld case study</field><field name="author"/><field name="topics">GridWorld</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www2.niles-hs.k12.il.us/davrut/TronGame/TetrisGameProj.pdf</field><field name="name">Tetris Project</field><field name="description">Activity where students create a Tetris game using gridworld</field><field name="author"/><field name="topics">GridWorld</field><field name="resource_type">activity</field></doc><doc><field name="url">http:www.bbn-school.org/us/math/ap_comp_sci/APCS%2520lesson%2520if-then%25202006.doc</field><field name="name">Conditionals Lesson Plan from Buckingham, Browne, and Nichols school in Massachussetts</field><field name="description">Lesson plan for teaching if statements. URL does not seem to work; file is available</field><field name="author"/><field name="topics">conditionals</field><field name="resource_type">lesson plan</field></doc><doc><field name="url">https://docs.google.com/document/pub?id=1N_yXU45Qvyk6dOPG-a-DuqsmIyjPLnx64lyE3YCjvBc</field><field name="name">Collectable cards to teach searching and sorting</field><field name="description">In this activity, the students perform searches and sorts using a set of cards. Collectible card game (CCG) cards, like Magic the Gathering or Pokemon Cards, are recommended for this activity. Regular playing cards can be used as well.</field><field name="author"/><field name="topics">sorting, searching</field><field name="resource_type">activity</field></doc><doc><field name="url">https://www.ipd.uni-karlsruhe.de/jplag/</field><field name="name">Jplag</field><field name="description">System for detecting plagiarism amongst student code</field><field name="author"/><field name="topics"/><field name="resource_type">tool</field></doc><doc><field name="url">http://csunplugged.org/sorting-algorithms</field><field name="name">Lightest and Heaviest</field><field name="description">CS Unplugged activity allowing students examine different algorithms for sorting data. Students create algorithms and compare them to determine which is the most efficient.</field><field name="author"/><field name="topics">sorting, efficiency</field><field name="resource_type">activity</field></doc><doc><field name="url">http://csunplugged.org/binary-numbers</field><field name="name">Binary Numbers</field><field name="description">CS Unplugged activity to help students understand how to convert between digital and binary</field><field name="author"/><field name="topics">binary</field><field name="resource_type">activity</field></doc><doc><field name="url">http://csunplugged.org/programming-languages</field><field name="name">Marching Orders</field><field name="description">CS Unplugged activity. This activity demonstrates some of the issues that arise when we try to give precise instructions to achieve a desired outcome.</field><field name="author"/><field name="topics">algorithms</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.cse.ohio-state.edu/~paolo/outreach/FESC02/se.pdf</field><field name="name">Mars Rover</field><field name="description">Kinaesthetic Learning Activity (KLA) activity developed by Paul A. G. Sivilotti to introduce CS concepts to high school girls is Software Engineering: 'Mars Pathfinder' . This activity illustrates the fact that a program is a series of instructions that tells a computer exactly what to do. So, a computer scientist must design the program carefully, to be sure that the computer will do the right thing. Please note that this activity requires the use of a Lego Rover robot.</field><field name="author"/><field name="topics">algorithms</field><field name="resource_type">activity</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/members/repository/ap07_compsci_teachersguide.pdf</field><field name="name">APCS Teacher's Guide</field><field name="description">Teachers Guide for use with AP CS A course.</field><field name="author"/><field name="topics">all</field><field name="resource_type">resource</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/members/homepage/35292.html</field><field name="name">Teaching Tips and Strategies</field><field name="description">Teaching tips and strategies designed for AP CS teachers. Has hints about grading students, using the case study, and more.</field><field name="author"/><field name="topics"/><field name="resource_type">resource</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/members/courses/teachers_corner/50085.html</field><field name="name">Date Class</field><field name="description">Activity to start writing classes and programs. Doing computations with dates is a frequently used operation. Businesses often give discounts when payment is received within 30 days, so there's a need to add 30 days to a given date. The 104th Congress promised many changes in the first hundred days, so 100 days had to be added to the opening date of Congress to find the end of the first period of reform. Subtracting days from a date of birth can be used in paternity suits.The program should prompt the user for an event, the date of the event, and the number of days to add, and then it should print the result of adding the days to the given start date.</field><field name="author"/><field name="topics"/><field name="resource_type">activity</field></doc><doc><field name="url">http://nifty.stanford.edu/2007/cigas-mediamanipulation/</field><field name="name">Media Manipulation</field><field name="description">Activity for students to investigate media manipulation using MS Excel.</field><field name="author"/><field name="topics"/><field name="resource_type">activity</field></doc><doc><field name="url">http://nifty.stanford.edu/2008/blaheta-maze/gridworld/index.html</field><field name="name">Maze Solver</field><field name="description">Students write a program to solve mazes. Works with Gridworld. Advanced activity, probably suitable for very strong students or post-AP test.</field><field name="author"/><field name="topics">array, stack, queue</field><field name="resource_type">activity</field></doc><doc><field name="url">http://nifty.stanford.edu/2007/reed-asciimations/</field><field name="name">ASCIImations</field><field name="description"/><field name="author"/><field name="topics">algorithms</field><field name="resource_type">activity</field></doc><doc><field name="url">http://nifty.stanford.edu/2006/wolfman-pretid/</field><field name="name">Natural Prestidigitation</field><field name="description">Natural Prestidigitation â€” write a simple number-crunching program to explore a bizarre phenomenon in the distribution of first digits of numerical data (called Benford's Law) in real, student-collected data. From Nifty Assignments archive</field><field name="author"/><field name="topics">algorithms, arrays, loops</field><field name="resource_type">activity</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/members/courses/teachers_corner/50058.html</field><field name="name">Car Rental</field><field name="description">Students create a system to organize and find data about a rental car.</field><field name="author"/><field name="topics">data, loops, strings, conditionals</field><field name="resource_type">activity</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/members/courses/teachers_corner/50043.html</field><field name="name">Guessing Game</field><field name="description">Have your program pick a random integer between 1 and 100 (and keep it 'to itself'). When you run the program, you try to guess the number. The program tells you whether your guess is too high, too low, or exactly right. If you don't guess the number within a certain number of tries, the program should tell you that you lost the game and tell you what the hidden number was. Be sure the program gives good instructions when it begins.</field><field name="author"/><field name="topics">binary search</field><field name="resource_type">activity</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/members/courses/teachers_corner/50054.html</field><field name="name">Tollbooth Programming</field><field name="description">Students write a program to simulate a tollbooth operator, determining how much money to collect.</field><field name="author"/><field name="topics">data, methods, parameters, inheritence, data structures</field><field name="resource_type">activity</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/members/courses/teachers_corner/50037.html</field><field name="name">Cat and Mouse</field><field name="description">Given a problem about a mouse running around a tree and a cat chasing it, students need to write a program to simulate the problem and determine if the cat catches the mouse.</field><field name="author"/><field name="topics">algorithms, graphics, parameter</field><field name="resource_type">activity</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/members/courses/teachers_corner/50055.html</field><field name="name">Twelve Days of Christmas</field><field name="description">Assignment to write a program to print all the verses of the 'Twelve Days of Christmas' (or some other holiday song of your choosing). I've used the traditional wording in my examples, but you may rewrite the lyrics, as long as the content is appropriate for an academic setting.</field><field name="author"/><field name="topics">algorithms, recursion</field><field name="resource_type">activity</field></doc><doc><field name="url">http://apcentral.collegeboard.com/apc/members/courses/teachers_corner/50045.html</field><field name="name">Hailstone Sequence</field><field name="description">Assignment to Write a method that computes a hailstone sequence (for a given seed) and calculates its length and the highest value reached.</field><field name="author"/><field name="topics">function, algorithm, math</field><field name="resource_type">activity</field></doc><doc><field name="url">http://webster.cs.washington.edu:8080/practiceit/</field><field name="name">Practice It</field><field name="description">This online tool allows you to practice problems from the textbook Building Java Programs (2nd edition) and from the University of Washington's introductory Java programming courses. View a code problem and submit a solution to our server; the system will test it and tell you whether your code is correct.</field><field name="author"/><field name="topics">all</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.robbiemcelrath.com/javaball/</field><field name="name">Javaball</field><field name="description">Javaball is a free web application that tests students with practice Java programming questions and offers real-time feedback of their code.</field><field name="author"/><field name="topics">all</field><field name="resource_type">activity</field></doc><doc><field name="url">http://turingscraft.com/</field><field name="name">Turingscraft CodeLab</field><field name="description">Online, fee-based programming exercise system that allows students to write code in the browser and having checked immediately. Very nice, good features, similar functionality to CodingBat and Javaball</field><field name="author"/><field name="topics">all</field><field name="resource_type">activity</field></doc><doc><field name="url">http://introcs.cs.princeton.edu/assignments/guitar.html</field><field name="name">Plucking a Guitar String</field><field name="description">Write a program to simulate plucking a guitar string using the Karplus-Strong algorithm. This algorithm played a seminal role in the emergence of physically modeled sound synthesis (where a physical description of a musical instrument is used to synthesize sound electronically).</field><field name="author"/><field name="topics">objects,</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://introcs.cs.princeton.edu/assignments/sequence.html</field><field name="name">Global Sequence Alignment</field><field name="description">Write a program to compute the optimal sequence alignment of two DNA strings. This program will introduce you to the emerging field of computational biology in which computers are used to do research on biological systems. Further, you will be introduced to a powerful algorithmic design paradigm known as dynamic programming.</field><field name="author"/><field name="topics">dynamic programming, strings</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://introcs.cs.princeton.edu/assignments/nbody.html</field><field name="name">N-body Simulation</field><field name="description">In 1687 Sir Isaac Newton formulated the principles governing the the motion of two particles under the influence of their mutual gravitational attraction in his famous Principia. However, Newton was unable to solve the problem for three particles. Indeed, in general, systems of three or more particles can only be solved numerically. Your challenge is to write a program to simulate the motion of N particles in the plane, mutually affected by gravitational forces, and animate the results. Such methods are widely used in cosmology, semiconductors, and fluid dynamics to study complex physical systems. Scientists also apply the same techniques to other pairwise interactions including Coulombic, Biot-Savart, and van der Waals.</field><field name="author"/><field name="topics">simulation, standard input, arrays</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://introcs.cs.princeton.edu/assignments/root.html</field><field name="name">Extracting Roots</field><field name="description">Compute square roots using Newton's method</field><field name="author"/><field name="topics">loops, numerical computation</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.cs.princeton.edu/courses/archive/spring03/cs226/assignments/redundant.html</field><field name="name">Redundancy Detector</field><field name="description">Find the longest repeated sequence in a given text.</field><field name="author"/><field name="topics">sorting, strings</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.cs.princeton.edu/courses/archive/spring03/cs126/assignments/textindex.html</field><field name="name">Text Indexing</field><field name="description">Build an inverted index of a text corpus and find the position of query strings in the text</field><field name="author"/><field name="topics">sorting, binary search tree</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.cs.princeton.edu/courses/archive/fall10/cos126/assignments/loops.html</field><field name="name">Conditionals and Loops</field><field name="description">Write several short Java programs that solve problems such as binary logarithm, checkerboard pattern, random walk, and Gaussian distribution</field><field name="author"/><field name="topics">expressions, loops, conditionals</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.cs.princeton.edu/courses/archive/fall10/cos126/assignments/stock.html</field><field name="name">Dilbert's Stock Market</field><field name="description">Write a program to predict the performance of various stocks using Dilbert's rules</field><field name="author"/><field name="topics">loops</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1060-three-little-fibs/1060.html</field><field name="name">Three Little Fibs</field><field name="description">Use an interface and three classes that implement that interface to compute Fibonacci numbers. Each implementation uses a different technique: iteration, recursion, or a formula using the Golden Ratio to calculate Fibonacci numbers directly.</field><field name="author"/><field name="topics">interfaces, recursion, math library routines, iteration</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1070-e/1070.html</field><field name="name">e</field><field name="description">A simplle assignment in taking an algorithm and generating and object to calculate a value for the irrational number, e</field><field name="author"/><field name="topics">objects, algorithms</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1080-pi/1080.html</field><field name="name">pi</field><field name="description">Assignment to compute an approximation for the number pi.</field><field name="author"/><field name="topics">algorithms</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1280-slotmachine/1280.html</field><field name="name">Slot matchine</field><field name="description">Students create a class that models the behavior of a slot machine. This lab gives good practice with compound conditionals to check winning combinations. The reels may be stored in an ArrayList. The lab can also be implemented with a HashSet created in the constructor storing the 39 possible winning combinations.</field><field name="author"/><field name="topics">conditionals, ArrayList, HashSet</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1340-spelling/1340.html</field><field name="name">Spelling Rules</field><field name="description">Use string operations to check two common spelling rules: 'I before e except after c' and that the letter 'q' is always followed by the letter 'u'. Of course, there are always exceptions.</field><field name="author"/><field name="topics">conditionals, strings, exceptions</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1370-farm/1370.html</field><field name="name">Old MacDonald</field><field name="description">Learn about inheritance and polymorphism by defining an Animal interface and then using that interface to create a cow, chicken, and pig. Create a class that extends Cow to allow the cows to have names.</field><field name="author"/><field name="topics">inheritance, polymorphism, interfaces</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1380-cards/1380.html</field><field name="name">Cards</field><field name="description">Follow a sequence of steps to define and implement a Card object and then a Deck (of 52 cards). Create another object, a Hand of cards, implement the deal and write code to use the classes to create poker hands, properly sorted.</field><field name="author"/><field name="topics">objects, inheritance, arraylist, comparable interface, insertion sort</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1390-cemetery/1390.html</field><field name="name">Fish Street Cemetery</field><field name="description">Find the average of life of people from Little Carter Lane who were buried at St. Mary Magdalene Cemetery, Old Fish Street, City of London from 1813 to 1853. Develop a Tombstone class to record information about each resident and a Cemetery class to hold all the pertinent information from the Tombstones.</field><field name="author"/><field name="topics">classes, data</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1400-tasmania/1400.html</field><field name="name">Tasmania</field><field name="description">In 1832, two hundred women sailed from England to a new home in Tasmania. Most were young and most were from penitentiaries, reform schools or asylums. Explore the data set to learn more.</field><field name="author"/><field name="topics">1D array, exceptions, data</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1420-crickets/1420.html</field><field name="name">Crickets</field><field name="description">There is a relationship between cricket chirps per minute and air temperature. Model an environment and crickets in that environment with changing air temperatures. Extend a normal Carolina cricket to a Clemson cricket that chirps a bit slower.</field><field name="author"/><field name="topics">modeling, inheritance</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1640-tendron/1640.html</field><field name="name">Tendron</field><field name="description">Use recursion to generate a graphic image. Your code will draw a 'plant' recursively, modifying the structure as the elements get smaller, going through smaller branches and finally to leaves. Every time the tendron program runs, it generates a new and different plant since growth occurs randomly. Color is used to enhance the lifelike appearance.</field><field name="author"/><field name="topics">recursion, graphics</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/1810-fruit/1810.html</field><field name="name">Tropical Fruits</field><field name="description">Tropical fruits have been found to be high in potassium. Use a base class Linked List to extend an ordered linked list to store information about 22 tropical fruits.</field><field name="author"/><field name="topics">ordered linked list insertion, deletion</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.rfrank.net/cslabs-final/2010-friday/2010.html</field><field name="name">Superstition</field><field name="description">Which day of the week is the thirteenth of the month most likely to fall upon? Once you have determined how often the calendar repeats itself, use a GregorianCalendar object to cycle through all the days, counting how many Mondays, Tuesdays, &amp;c. fall on the 13th of each month. Use a Hash Map to keep the tally.</field><field name="author"/><field name="topics">HashMap</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.shenet.org/high/hsacaddept/technology/chanley/javahalfyear/assigns/Spring2010/Java%20Assignment-BasicConsoleApplications.pdf</field><field name="name">Basic Console Applications</field><field name="description">Your first assignment in java is to create 3 console applications. Convert from square feet to square meters and solve 2 problems problems(2-3) from the algorithm practice worksheet #1. Each one will feature interaction with the user via keyboard input.</field><field name="author"/><field name="topics">input</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.shenet.org/high/hsacaddept/technology/chanley/javahalfyear/assigns/Spring2010/JavaBonusAssignmentCoinFlip.pdf</field><field name="name">Coin Flip</field><field name="description">Assignment to create a program. Coin flip is a game where the computer simulates two players flipping coins a certain number of times. The user determines how many times the players are to flip their coins.</field><field name="author"/><field name="topics"/><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.shenet.org/high/hsacaddept/technology/chanley/javahalfyear/assigns/2006%20Spring%20Assign%204%20-%20Fast%20Food%20Register.pdf</field><field name="name">Fast Food</field><field name="description">You are to develop a program for a fast food restaurant. Your program will control the cash register of the restaurant. You should develop a swing application that has buttons for items that can be ordered from the restaurant. You should also provide a 5 JTextFields as follows;</field><field name="author"/><field name="topics"/><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.shenet.org/high/hsacaddept/technology/chanley/javahalfyear/assigns/Spring2010/JavaAssignment5-IntrotoSwing.pdf</field><field name="name">Basic Swing</field><field name="description">You are going to design a graphical window using JBuilderâ€™s GUI designer. You are also going to make an App that creates one instance of your frame and displays it.</field><field name="author"/><field name="topics">GUI</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.shenet.org/high/hsacaddept/technology/chanley/javahalfyear/assigns/Spring2010/JavaAssignment4-ArrayBudget.pdf</field><field name="name">Budget Array</field><field name="description">Students create a budget using arrays</field><field name="author"/><field name="topics">array</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.shenet.org/high/hsacaddept/technology/chanley/javahalfyear/assigns/Glossary%20Terms%20to%20Know%20for%20Java%20blank.pdf</field><field name="name">Glossary Terms</field><field name="description">Nice handout that students can use to keep track of Java vocabulary</field><field name="author"/><field name="topics">all</field><field name="resource_type">handout</field></doc><doc><field name="url">http://www.shenet.org/high/hsacaddept/technology/chanley/javahalfyear/assigns/Powerpoint%20Project%20Guidelines.pdf</field><field name="name">Final presentation</field><field name="description">Assignment for students to create a presentation about Java topics.</field><field name="author"/><field name="topics"/><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.shenet.org/high/hsacaddept/technology/chanley/javahalfyear/assigns/Spring2010/JavaBonusAssignmentFoxGooseGrain.pdf</field><field name="name">Fox Goose Grain</field><field name="description">Develop an application that allows a user to play out the fox goose grain riddle. A farmer owns a boat and a fox, goose and bag of grain. Strange, eh? He or she wants to get each of these entities across a river on his property.</field><field name="author"/><field name="topics"/><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.shenet.org/high/hsacaddept/technology/chanley/javahalfyear/assigns/Spring2010/Java%20Assignment3-LoopPractice.pdf</field><field name="name">Loops</field><field name="description">Gives students practice writing programs that use loops.</field><field name="author"/><field name="topics">loops</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.cs.washington.edu/education/courses/cse142/10wi/handouts/17.html</field><field name="name">Critters</field><field name="description">You are to write a set of classes that define the behavior of certain animals. You will be given a program that runs a simulation of a world with many animals wandering around in it. Different kinds of animals will behave in different ways and you are defining those differences. In this world, animals propagate their species by infecting other animals with their DNA, which transforms the other animal into the infecting animalâ€™s species. This idea of animals transforming into a different species appeared in many Star Trek episodes, particularly the Next Generation episode called â€œIdentity Crisis.â€ Additional files at http://www.cs.washington.edu/education/courses/cse142/10wi/homework.shtml</field><field name="author"/><field name="topics"/><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.cs.washington.edu/education/courses/cse142/10wi/handouts/16.html</field><field name="name">Personality Test</field><field name="description">You are going to write a program that processes an input file of data for a personality test known as the Keirsey Temperament Sorter. The Keirsey personality test involves answering 70 questions each of which have two answers. We will refer to them as the â€œAâ€ answer and the â€œBâ€ answer. People taking the test are allowed to leave a question blank, in which case their answer will be recorded with a dash (â€œ-â€). Additional files at http://www.cs.washington.edu/education/courses/cse142/10wi/homework.shtml</field><field name="author"/><field name="topics"/><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.cs.washington.edu/education/courses/cse142/10wi/handouts/14.html</field><field name="name">Baby Names</field><field name="description">We will be processing a file with data obtained from the Social Security Administration. They provide a web site showing the distribution of names chosen for children over the last 100 years in the US (http://www.ssa.gov/OACT/babynames/).</field><field name="author"/><field name="topics"/><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.cs.washington.edu/education/courses/cse142/10wi/handouts/08.html</field><field name="name">Guessing Game</field><field name="description">You are going to write a program that allows the user to play a simple guessing game in which your program thinks up an integer and allows the user to make guesses until the user gets it right. For each incorrect guess you will tell the user whether the right answer is higher or lower. Additional files at http://www.cs.washington.edu/education/courses/cse142/10wi/homework.shtml</field><field name="author"/><field name="topics">while, random</field></doc><doc><field name="url">http://www.cs.washington.edu/education/courses/cse142/10wi/handouts/07.html</field><field name="name">Admissions</field><field name="description">You are to write a program that prompts the user for information about two applicants and that computes an overall score for each applicant. This is a simplified version of a program that might be used for admissions purposes. Additional files at http://www.cs.washington.edu/education/courses/cse142/10wi/homework.shtml</field><field name="author"/><field name="topics"/></doc><doc><field name="url">http://www.cs.washington.edu/education/courses/cse142/10wi/handouts/05.html</field><field name="name">Cafe Wall</field><field name="description">This assignment will give you practice with for loops, value parameters, and graphics. Additional files at http://www.cs.washington.edu/education/courses/cse142/10wi/homework.shtml</field><field name="author"/><field name="topics">loops, parameters, graphics</field><field name="resource_type">assignment</field></doc><doc><field name="url">http://www.cs.washington.edu/education/courses/cse142/10wi/handouts/03.html</field><field name="name">Rocket Ship</field><field name="description">Creates ascii art. This assignment will give you practice with for loops, static methods, print/println statements and a class constant.</field><field name="author"/><field name="topics"/></doc><doc><field name="url">http://www.cs.washington.edu/education/courses/cse142/10wi/handouts/02.html</field><field name="name">Song</field><field name="description">Your first program will require the use of static methods and println statements. This assignment is worth 10 points instead of the normal 20 points. You are going to write a Java program that produces as output a cumulative song in which successive verses build on previous verses (as described in http://en.wikipedia.org/wiki/Cumulative_song).</field><field name="author"/><field name="topics"/></doc><doc><field name="url">http://patternsinfp.wordpress.com/</field><field name="name">Patterns in Functional Programming</field><field name="description">Exploiting the relationship between data structure and program structure</field><field name="author"/><field name="topics"/><field name="resource_type">blog</field></doc><doc><field name="url">http://www.cs.cmu.edu/~rwh/plbook/book.pdf</field><field name="name">Practical Foundations for Programming Languages</field><field name="description">PDF of a book about programming languages. May be appropriate for after the AP test.</field><field name="author"/><field name="topics"/><field name="resource_type">book</field></doc><doc><field name="url">http://www.blahedo.org/cs-ads/</field><field name="name">Recruiting Ideas</field><field name="description">Don Blaheta's web page of links and recommendations for how to recruit students into classes</field><field name="author"/><field name="topics">recruiting</field><field name="resource_type">idea</field></doc><doc><field name="url">http://www.programming-challenges.com/pg.php?page=index</field><field name="name">Programming Challenges</field><field name="description">Website to accompany the Programming Challenges book. Has some sample programs.</field><field name="author"/><field name="topics"/></doc><doc><field name="url">http://compsci101.wordpress.com/</field><field name="name">Thinking about Programming</field><field name="description">Blog by Owen Astrachan talking about approaching introductory programming.</field><field name="author"/><field name="topics"/><field name="resource_type">blog</field></doc><doc><field name="url">http://www.mith.umd.edu/flare/lovelace/</field><field name="name">Ada Byron Lovelace Page</field><field name="description">Page about Ada Byron Lovelace</field><field name="author"/><field name="topics">history</field><field name="resource_type">article</field></doc><doc><field name="url">http://demonstrations.wolfram.com/TumorGrowthModel/</field><field name="name">Tumor Growth Model</field><field name="description">Visualization of a model of tumor growth, clearly computer-generated.</field><field name="author"/><field name="topics"/><field name="resource_type">visualization</field></doc><doc><field name="url">http://people.cs.vt.edu/~shaffer/Book/</field><field name="name">A Practical Introduction to Data Structures and Algorithm Analysis</field><field name="description">Textbook in Java.</field><field name="author"/><field name="topics">all</field><field name="resource_type">textbook</field></doc><doc><field name="url">http://www.cs.jhu.edu/~pari/600.107/Horstmann/slides/Ch17/ch17.html</field><field name="name">Recursion</field><field name="description">Explanation about recursion from Horstmann's book</field><field name="author"/><field name="topics"/><field name="resource_type">lesson</field></doc><doc><field name="url">http://www.mindview.net/Books/TIJ/</field><field name="name">Thinking in Java</field><field name="description">Thinking in Java textbook</field><field name="author"/><field name="topics">all</field><field name="resource_type">textbook</field></doc><doc><field name="url">http://www.paulgraham.com/hp.html</field><field name="name">Hackers and Painters</field><field name="description">Essay about the creativity of computer science.</field><field name="author"/><field name="topics"/><field name="resource_type">essay</field></doc><doc><field name="url">http://www2.niles-hs.k12.il.us/davrut/apcsa/apcsAtest05_FR.pdf</field><field name="name">APCS Test from 2005</field><field name="description">Practice AP test from 2005</field><field name="author"/><field name="topics">all</field><field name="resource_type">test</field></doc><doc><field name="url">http://www2.niles-hs.k12.il.us/davrut/apcsa/worksheets/recurWSjava2010.txt</field><field name="name">Recursion exercises</field><field name="description">Worksheet giving students practice with recursion</field><field name="author">Mr. Ruth</field><field name="topics">recursion</field><field name="resource_type">worksheet</field></doc><doc><field name="url">http://www.greenleecds.com/javaapdownloads/apch13ws5arrayList.05.pdf</field><field name="name">ArrayList</field><field name="description">Worksheet for students to practice using arraylists</field><field name="author"/><field name="topics">arraylist</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www.greenleecds.com/javaapdownloads/apch13ws6arrayList.05.pdf</field><field name="name">Arraylist</field><field name="description">Worksheet for students to practice using arraylists</field><field name="author"/><field name="topics">arraylist</field><field name="resource_type">activity</field></doc><doc><field name="url">http://www2.niles-hs.k12.il.us/davrut/apcsa/notes/StringArrayPracticeQuiz.txt</field><field name="name">Practice Test</field><field name="description">Quiz covering strings.</field><field name="author"/><field name="topics">strings</field><field name="resource_type">test</field></doc><doc><field name="url">http://paleyontology.com/AP_CS/HashMap.html</field><field name="name">Histogram using Hashmaps</field><field name="description">Student runs code and analyzes how it works.  Student then produces a histogram of the data generated by the original code.</field><field name="author">Paley</field><field name="topics">HashMap, Iterator (as applied to Map)</field><field name="resource_type">activity</field><field name="resource_type">case study</field><field name="resource_type">lesson</field><field name="resource_type">project</field></doc></add>